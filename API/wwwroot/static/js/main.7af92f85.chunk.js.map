{"version":3,"sources":["app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/layout/NavBar.tsx","app/layout/LoadingComponents.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/common/form/MyTextArea.tsx","app/common/form/SelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSideBar.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","app/layout/PrivateRoutes.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","error","data","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","details","id","create","activity","update","attend","Account","current","login","user","register","Activity","init","Object","assign","this","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","username","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","loadActivities","forEach","setActivity","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","set","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","makeAutoObservable","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","activityStore","getItem","appLoaded","setAppLoaded","reaction","setItem","modal","open","openModal","content","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","LoadingComponent","Dimmer","active","Loader","ActivityFilters","vertical","size","width","marginTop","Header","attached","color","className","profile","Card","Content","Description","extra","Icon","List","horizontal","map","Popup","hoverable","trigger","circular","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","basic","secondary","clearing","floated","groupedActivities","group","sub","useEffect","Grid","Column","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","catch","handleSubmit","isSubmitting","autoComplete","placeholder","type","render","fluid","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","disabled","isLoggedIn","MyTextArea","MySelectInput","helpers","Select","clearable","options","value","onChange","e","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","useState","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","Comment","Avatar","Author","Metadata","Text","Actions","Action","reply","TextArea","labelPosition","primary","verticalAlign","length","relaxed","divided","ribbon","Extra","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ActivityDetailedSideBar","TestErrors","widths","baseUrl","NotFound","Inline","message","Modal","onClose","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ServerError","LoginForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"+YAaAA,IAAMC,SAASC,QAAUC,OAEzBH,IAAMI,aAAaC,QAAQC,KAAI,SAAAC,GAC3B,IAAMC,EAAQC,EAAMC,YAAYF,MAEhC,OADIA,IAAOD,EAAOI,QAASC,cAAhB,iBAA0CJ,IAC9CD,KAGXP,IAAMI,aAAaS,SAASP,IAA5B,+BAAAQ,EAAA,MAAgC,WAAMD,GAAN,SAAAC,EAAA,qGAErBD,GAFqB,2CAAhC,uDAGG,SAACE,GACA,MAA+BA,EAAMF,SAA9BG,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQV,EAArB,EAAqBA,OACrB,OAAQU,GACJ,KAAK,IAID,GAHsB,QAAlBV,EAAOW,QAAoBF,EAAKG,OAAOC,eAAe,OACtDC,GAAQC,KAAK,cAEbN,EAAKG,OAAQ,CACb,IAAMI,EAAmB,GACzB,IAAK,IAAMC,KAAOR,EAAKG,OACfH,EAAKG,OAAOK,IACZD,EAAiBD,KAAKN,EAAKG,OAAOK,IAG1C,MAAMD,EAAiBE,OAEvBC,IAAMX,MAAMC,GAEhB,MACJ,KAAK,IACDU,IAAMX,MAAM,gBACZ,MACJ,KAAK,IACDM,GAAQC,KAAK,cACb,MACJ,KAAK,IACDb,EAAMC,YAAYiB,eAAeX,GACjCK,GAAQC,KAAK,iBAGrB,OAAOM,QAAQC,OAAOd,MAG1B,IAAMe,EAAe,SAAIjB,GAAJ,OAAmCA,EAASG,MAE3De,EACG,SAAIC,GAAJ,OAAoBhC,IAAMiC,IAAOD,GAAKE,KAAKJ,IAD9CC,EAEI,SAAIC,EAAaG,GAAjB,OAA8BnC,IAAMoC,KAAQJ,EAAKG,GAAMD,KAAKJ,IAFhEC,EAGG,SAAIC,EAAaG,GAAjB,OAA8BnC,IAAMqC,IAAOL,EAAKG,GAAMD,KAAKJ,IAH9DC,EAIG,SAAIC,GAAJ,OAAoBhC,IAAMsC,OAAUN,GAAKE,KAAKJ,IAuBxCS,EALD,CACVC,WAhBe,CACfC,KAAM,kBAAMV,EAAyB,gBACrCW,QAAS,SAACC,GAAD,OAAgBZ,EAAA,sBAAsCY,KAC/DC,OAAQ,SAACC,GAAD,OAAkCd,EAAoB,cAAec,IAC7EC,OAAQ,SAACD,GAAD,OAAkCd,EAAA,sBAAkCc,EAASF,IAAME,IAC3FP,OAAQ,SAACK,GAAD,OAAgBZ,EAAA,sBAAkCY,KAC1DI,OAAQ,SAACJ,GAAD,OAAgBZ,EAAA,sBAAmCY,EAAnC,WAAgD,MAWxEK,QARY,CACZC,QAAS,kBAAMlB,EAAmB,aAClCmB,MAAO,SAACC,GAAD,OAA0BpB,EAAoB,iBAAkBoB,IACvEC,SAAU,SAACD,GAAD,OAA0BpB,EAAoB,oBAAqBoB,MC5DlEE,EACX,WAAYC,GAA4B,oBACtCC,OAAOC,OAAOC,KAAMH,IAIXI,EASX,WAAYb,GAAgC,yBAR5CF,QAAcgB,EAQ6B,KAP3CC,MAAgB,GAO2B,KAN3CC,SAAmB,GAMwB,KAL3CC,YAAsB,GAKqB,KAJ3CC,KAAoB,KAIuB,KAH3CC,KAAe,GAG4B,KAF3CC,MAAgB,GAGVpB,IACFY,KAAKd,GAAKE,EAASF,GACnBc,KAAKG,MAAQf,EAASe,MACtBH,KAAKI,SAAWhB,EAASgB,SACzBJ,KAAKK,YAAcjB,EAASiB,YAC5BL,KAAKM,KAAOlB,EAASkB,KACrBN,KAAKQ,MAAQpB,EAASoB,MACtBR,KAAKO,KAAOnB,EAASmB,O,SChChBE,EACT,WAAYf,GAAa,oBACrBM,KAAKU,SAAWhB,EAAKgB,SACrBV,KAAKW,YAAcjB,EAAKiB,YACxBX,KAAKY,MAAQlB,EAAKkB,OCNLC,E,WAOjB,aAAe,IAAD,gCANdC,iBAAmB,IAAIC,IAMT,KALdC,sBAAyCd,EAK3B,KAJde,UAAW,EAIG,KAHdC,SAAU,EAGI,KAFdC,gBAAiB,EAEH,KAmBdC,eAnBc,sBAmBG,sBAAA/D,EAAA,6DACb,EAAK8D,gBAAiB,EADT,kBAGgBrC,EAAMC,WAAWC,OAHjC,cAIEqC,SAAQ,SAAAjC,GACf,EAAKkC,YAAYlC,MAErB,EAAKmC,mBAAkB,GAPd,gDASTC,QAAQC,IAAR,MACA,EAAKF,mBAAkB,GAVd,yDAnBH,KAiCdG,aAjCc,uCAiCC,WAAOxC,GAAP,eAAA7B,EAAA,2DACP+B,EAAW,EAAKuC,YAAYzC,IADrB,uBAGP,EAAK8B,iBAAmB5B,EAHjB,kBAIAA,GAJA,cAMP,EAAK+B,gBAAiB,EANf,mBAQcrC,EAAMC,WAAWE,QAAQC,GARvC,eAQHE,EARG,OASH,EAAKkC,YAAYlC,GACjBwC,aAAY,WACR,EAAKZ,iBAAmB5B,KAE5B,EAAKmC,mBAAkB,GAbpB,kBAcInC,GAdJ,kCAgBHoC,QAAQC,IAAR,MACA,EAAKF,mBAAkB,GAjBpB,0DAjCD,2DAuDND,YAAc,SAAClC,GACnB,IACU,EADJM,EAAO1C,EAAM6E,UAAUnC,KACzBA,IACAN,EAAS0C,QAAU1C,EAAS2C,UAAWC,MACnC,SAAA3E,GAAC,OAAIA,EAAEqD,WAAahB,EAAKgB,YAE7BtB,EAAS6C,OAAS7C,EAAS8C,eAAiBxC,EAAKgB,SACjDtB,EAAS+C,KAAT,UAAgB/C,EAAS2C,iBAAzB,aAAgB,EAAoBK,MAAK,SAAAC,GAAC,OAAIA,EAAE3B,WAAatB,EAAS8C,iBAE1E9C,EAASkB,KAAO,IAAIgC,KAAKlD,EAASkB,MAClC,EAAKQ,iBAAiByB,IAAInD,EAASF,GAAIE,IAjE7B,KAoENuC,YAAc,SAACzC,GACnB,OAAO,EAAK4B,iBAAiBtC,IAAIU,IArEvB,KAwEdqC,kBAAoB,SAACiB,GACjB,EAAKrB,eAAiBqB,GAzEZ,KA4EdC,eA5Ec,uCA4EG,WAAOrD,GAAP,mBAAA/B,EAAA,6DACPqC,EAAO1C,EAAM6E,UAAUnC,KACvBgD,EAAW,IAAIjC,EAAQf,GAFhB,kBAIHZ,EAAMC,WAAWI,OAAOC,GAJrB,QAKHuD,EAAc,IAAI/C,EAASR,IACrB8C,aAAexC,EAAMgB,SACjCiC,EAAYZ,UAAY,CAACW,GACzB,EAAKpB,YAAYqB,GACjBf,aAAY,WACR,EAAKZ,iBAAmB2B,KAVnB,kDAaTnB,QAAQC,IAAR,MAbS,0DA5EH,2DA6FdmB,eA7Fc,uCA6FG,WAAOxD,GAAP,SAAA/B,EAAA,+EAEHyB,EAAMC,WAAWM,OAAOD,GAFrB,OAGTwC,aAAY,WACR,GAAIxC,EAASF,GAAI,CACb,IAAI2D,EAAe,2BAAO,EAAKlB,YAAYvC,EAASF,KAAQE,GAC5D,EAAK0B,iBAAiByB,IAAInD,EAASF,GAAI2D,GACvC,EAAK7B,iBAAmB6B,MAPvB,+CAWTrB,QAAQC,IAAR,MAXS,wDA7FH,2DA4GdqB,eA5Gc,uCA4GG,WAAO5D,GAAP,SAAA7B,EAAA,6DACb,EAAK6D,SAAU,EADF,kBAGHpC,EAAMC,WAAWF,OAAOK,GAHrB,OAIT0C,aAAY,WACR,EAAKd,iBAAiBjC,OAAOK,GAC7B,EAAKgC,SAAU,KANV,gDASTM,QAAQC,IAAR,MACAG,aAAY,WACR,EAAKV,SAAU,KAXV,yDA5GH,2DA4Hd6B,iBA5Hc,sBA4HK,4BAAA1F,EAAA,6DACTqC,EAAO1C,EAAM6E,UAAUnC,KAC7B,EAAKwB,SAAU,EAFA,kBAILpC,EAAMC,WAAWO,OAAO,EAAK0B,iBAAkB9B,IAJ1C,OAKX0C,aAAY,WAAO,IAAD,EACd,aAAI,EAAKZ,wBAAT,aAAI,EAAuBc,QAAS,CAAC,IAAD,EAChC,EAAKd,iBAAiBe,UAAtB,UACI,EAAKf,iBAAiBe,iBAD1B,aACI,EAAiCiB,QAAO,SAAA3F,GAAC,OAAIA,EAAEqD,YAAF,OAAehB,QAAf,IAAeA,OAAf,EAAeA,EAAMgB,aACtE,EAAKM,iBAAiBc,SAAU,MAC7B,CAAC,IAAD,IACGY,EAAW,IAAIjC,EAAQf,GAC7B,YAAKsB,wBAAL,mBAAuBe,iBAAvB,SAAkClE,KAAK6E,GACvC,EAAK1B,iBAAkBc,SAAU,EAErC,EAAKhB,iBAAiByB,IAAI,EAAKvB,iBAAkB9B,GAAI,EAAK8B,qBAfnD,gDAkBXQ,QAAQC,IAAR,MAlBW,yBAoBXG,aAAY,kBAAM,EAAKV,SAAU,KApBtB,4EA5HL,KAoJd+B,qBApJc,sBAoJS,sBAAA5F,EAAA,6DACnB,EAAK6D,SAAU,EADI,kBAGTpC,EAAMC,WAAWO,OAAO,EAAK0B,iBAAkB9B,IAHtC,OAIf0C,aAAY,WAAO,IAAD,EACd,EAAKZ,iBAAkBkC,cAAc,UAAC,EAAKlC,wBAAN,aAAC,EAAuBkC,aAC7D,EAAKpC,iBAAiByB,IAAI,EAAKvB,iBAAkB9B,GAAI,EAAK8B,qBAN/C,gDASfQ,QAAQC,IAAR,MATe,yBAWfG,aAAY,kBAAM,EAAKV,SAAU,KAXlB,4EAnJnBiC,YAAmBnD,M,kDAGvB,WACI,OAAOoD,MAAMC,KAAKrD,KAAKc,iBAAiBwC,UAAUC,MAAK,SAAClG,EAAGmG,GAAJ,OACnDnG,EAAEiD,KAAMmD,UAAYD,EAAElD,KAAMmD,e,6BAGpC,WACI,OAAO3D,OAAO4D,QACV1D,KAAK2D,iBAAiBC,QAAO,SAACC,EAAYzE,GACtC,IAAMkB,EAAOwD,kBAAO1E,EAASkB,KAAO,eAEpC,OADAuD,EAAWvD,GAAQuD,EAAWvD,GAAX,sBAAuBuD,EAAWvD,IAAlC,CAAyClB,IAAY,CAACA,GAClEyE,IACR,S,KCvBME,E,WAGjB,aAAe,IAAD,gCAFdrE,KAAoB,KAEN,KAQdD,MARc,uCAQN,WAAOuE,GAAP,eAAA3G,EAAA,+EAEmByB,EAAMS,QAAQE,MAAMuE,GAFvC,OAEMtE,EAFN,OAGA1C,EAAMC,YAAYgH,SAASvE,EAAK3C,OAChC6E,aAAY,kBAAM,EAAKlC,KAAOA,KAC9B9B,GAAQC,KAAK,eACbb,EAAMkH,WAAWC,aANjB,uHARM,2DAoBdC,OAAS,WACLpH,EAAMC,YAAYgH,SAAS,MAC3BI,OAAOC,aAAaC,WAAW,OAC/B,EAAK7E,KAAO,KACZ9B,GAAQC,KAAK,MAxBH,KA2Bd2G,QA3Bc,sBA2BJ,4BAAAnH,EAAA,+EAEiByB,EAAMS,QAAQC,UAF/B,OAEIE,EAFJ,OAGFkC,aAAY,kBAAM,EAAKlC,KAAOA,KAH5B,gDAKF8B,QAAQC,IAAR,MALE,yDA3BI,KAoCd9B,SApCc,uCAoCH,WAAOqE,GAAP,eAAA3G,EAAA,+EAEgByB,EAAMS,QAAQI,SAASqE,GAFvC,OAEGtE,EAFH,OAGH1C,EAAMC,YAAYgH,SAASvE,EAAK3C,OAChC6E,aAAY,kBAAM,EAAKlC,KAAOA,KAC9B9B,GAAQC,KAAK,eACbb,EAAMkH,WAAWC,aANd,uHApCG,sDACVhB,YAAmBnD,M,4CAGvB,WACI,QAASA,KAAKN,S,KCDT1C,EAAe,CACxByH,cAAe,IAAI5D,EACnB5D,YAAa,ICPb,aAAe,IAAD,gCAJdK,MAA4B,KAId,KAHdP,MAAuBsH,OAAOC,aAAaI,QAAQ,OAGrC,KAFdC,WAAY,EAEE,KAedzG,eAAiB,SAACZ,GACd,EAAKA,MAAQA,GAhBH,KAmBd2G,SAAW,SAAClH,GACR,EAAKA,MAAQA,GApBH,KAuBd6H,aAAe,WACX,EAAKD,WAAY,GAvBjBxB,YAAmBnD,MAEnB6E,aACI,kBAAM,EAAK9H,SACX,SAAAA,GACQA,EACAsH,OAAOC,aAAaQ,QAAQ,MAAO/H,GAEnCsH,OAAOC,aAAaC,WAAW,WDD/C1C,UAAW,IAAIkC,EACfG,WAAY,IEJZ,aAAe,IAAD,gCALda,MAAe,CACXC,MAAM,EACNtG,KAAM,MAGI,KAIduG,UAAY,SAACC,GACT,EAAKH,MAAMC,MAAO,EAClB,EAAKD,MAAMrG,KAAOwG,GANR,KASdf,WAAa,WACT,EAAKY,MAAMC,MAAO,EAClB,EAAKD,MAAMrG,KAAO,MAVlByE,YAAmBnD,QFMdmF,EAAeC,wBAAcpI,GAEnC,SAASqI,IACZ,OAAOC,qBAAWH,G,WGjBPI,eAAS,WACpB,MAAwCF,IAAhCxD,UAAanC,EAArB,EAAqBA,KAAM0E,EAA3B,EAA2BA,OAC3B,OACI,cAACoB,EAAA,EAAD,CAAMC,UAAQ,EAACC,MAAM,MAArB,SACI,eAACC,EAAA,EAAD,WACI,eAACH,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASC,OAAK,EAACC,GAAG,IAAIC,QAAM,EAA3C,UACI,qBAAKC,IAAI,mBAAmBC,IAAI,OAAOC,MAAO,CAAEC,YAAa,UADjE,kBAIA,cAACb,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASE,GAAG,cAAcM,KAAK,eAC9C,cAACd,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASE,GAAG,UAAUM,KAAK,WAC1C,cAACd,EAAA,EAAKI,KAAN,UACI,cAACW,EAAA,EAAD,CAAQV,GAAIC,IAASE,GAAG,kBAAkBQ,UAAQ,EAACtB,QAAQ,sBAE/D,eAACM,EAAA,EAAKI,KAAN,CAAWa,SAAS,QAApB,UACI,cAACC,EAAA,EAAD,CAAOR,KAAS,OAAJxG,QAAI,IAAJA,OAAA,EAAAA,EAAMkB,QAAS,mBAAoB+F,QAAM,EAACC,OAAO,UAC7D,cAACC,EAAA,EAAD,CAAUC,SAAS,WAAWC,KAAI,OAAErH,QAAF,IAAEA,OAAF,EAAEA,EAAMiB,YAA1C,SACI,eAACkG,EAAA,EAASrB,KAAV,WACI,cAACqB,EAAA,EAASjB,KAAV,CAAeC,GAAImB,IAAMhB,GAAE,0BAActG,QAAd,IAAcA,OAAd,EAAcA,EAAMgB,UAC3CqG,KAAK,aAAaE,KAAK,SAC3B,cAACJ,EAAA,EAASjB,KAAV,CAAesB,QAAS9C,EAAQ2C,KAAK,SAASE,KAAK,0B,2BClBhE,SAASE,EAAT,GAAsE,IAAD,IAA1C1B,gBAA0C,aAA5BP,eAA4B,MAAnB,YAAmB,EAChF,OACI,cAACkC,EAAA,EAAD,CAAQC,QAAQ,EAAM5B,SAAUA,EAAhC,SACI,cAAC6B,EAAA,EAAD,CAAQpC,QAAUA,M,sBCPf,SAASqC,IACpB,OACI,qCAEI,eAAC/B,EAAA,EAAD,CAAMgC,UAAQ,EAACC,KAAK,QAAQrB,MAAO,CAAEsB,MAAO,OAAOC,UAAU,IAA7D,UACI,cAACC,EAAA,EAAD,CAAQX,KAAK,SAASY,UAAQ,EAACC,MAAM,OAAO5C,QAAQ,YACpD,cAACM,EAAA,EAAKI,KAAN,CAAWV,QAAQ,mBACnB,cAACM,EAAA,EAAKI,KAAN,CAAWV,QAAQ,cACnB,cAACM,EAAA,EAAKI,KAAN,CAAWV,QAAQ,mBAIvB,cAAC,IAAD,CAAU6C,UAAW,gB,4ECNlBxC,gBAAS,YAAwC,IAAlByC,EAAiB,EAAjBA,QAC1C,OACI,eAACC,GAAA,EAAD,CAAMpC,GAAImB,IAAMhB,GAAE,oBAAegC,EAAQtH,UAAzC,UACI,cAACgG,EAAA,EAAD,CAAOR,IAAK8B,EAAQpH,OAAS,qBAC7B,eAACqH,GAAA,EAAKC,QAAN,WACI,cAACD,GAAA,EAAKL,OAAN,UAAcI,EAAQrH,cACtB,cAACsH,GAAA,EAAKE,YAAN,+BAEJ,eAACF,GAAA,EAAKC,QAAN,CAAcE,OAAK,EAAnB,UACI,cAACC,EAAA,EAAD,CAAM/B,KAAK,SADf,wBCPGf,gBAAS,YAAyD,IAArBxD,EAAoB,EAApBA,UACxD,OACI,cAACuG,EAAA,EAAD,CAAMC,YAAU,EAAhB,SACKxG,EAAUyG,KAAI,SAAA9F,GAAQ,OACnB,cAAC+F,GAAA,EAAD,CACIC,WAAS,EAETC,QACI,cAACL,EAAA,EAAK1C,KAAN,CAAmCC,GAAImB,IAAMhB,GAAE,oBAAetD,EAAShC,UAAvE,SACI,cAACgG,EAAA,EAAD,CAAOe,KAAK,OAAOmB,UAAQ,EAAC1C,IAAKxD,EAAS9B,OAAS,sBADvC8B,EAAShC,UAJjC,SASI,cAAC+H,GAAA,EAAMP,QAAP,UACI,cAAC,GAAD,CAAaF,QAAStF,OARrBA,EAAShC,kBCNnB,SAASmI,GAAT,GAAgD,IAAD,EAAnBzJ,EAAmB,EAAnBA,SAEvC,OACI,eAAC0J,EAAA,EAAQC,MAAT,WACI,eAACD,EAAA,EAAD,WACK1J,EAAS8D,aACN,cAAC8F,EAAA,EAAD,CAAOnB,SAAS,MAAMC,MAAM,MAAM5C,QAAQ,YAAYkB,MAAO,CAAC6C,UAAW,YAE7E,cAACrD,EAAA,EAAKmD,MAAN,UACI,eAACnD,EAAA,EAAD,WACI,cAACA,EAAA,EAAKc,MAAN,CAAYN,MAAO,CAAC8C,aAAc,GAAIzB,KAAK,OAAOmB,UAAQ,EAAC1C,IAAI,qBAC/D,eAACN,EAAA,EAAKsC,QAAN,WACI,cAACtC,EAAA,EAAKgC,OAAN,CAAa/B,GAAImB,IAAMhB,GAAE,sBAAiB5G,EAASF,IAAnD,SACKE,EAASe,QAEd,eAACyF,EAAA,EAAKuC,YAAN,kCAA6B/I,EAAS+C,YAAtC,aAA6B,EAAexB,eAC3CvB,EAAS6C,QACN,cAAC2D,EAAA,EAAKuC,YAAN,UACI,cAACa,EAAA,EAAD,CAAOG,OAAK,EAACrB,MAAM,SAAnB,6CAKP1I,EAAS0C,UAAY1C,EAAS6C,QAC3B,cAAC2D,EAAA,EAAKuC,YAAN,UACI,cAACa,EAAA,EAAD,CAAOG,OAAK,EAACrB,MAAM,QAAnB,yDASxB,cAACgB,EAAA,EAAD,UACI,iCACI,cAACT,EAAA,EAAD,CAAM/B,KAAK,UADf,IAC2BxC,kBAAO1E,EAASkB,KAAO,uBAC9C,cAAC+H,EAAA,EAAD,CAAM/B,KAAK,WAFf,IAE4BlH,EAASoB,WAGzC,cAACsI,EAAA,EAAD,CAASM,WAAS,EAAlB,SACI,cAAC,GAAD,CAA0BrH,UAAW3C,EAAS2C,cAElD,eAAC+G,EAAA,EAAD,CAASO,UAAQ,EAAjB,UACI,+BAAOjK,EAASiB,cAChB,cAACkG,EAAA,EAAD,CACIV,GAAImB,IACJhB,GAAE,sBAAiB5G,EAASF,IAC5B4I,MAAM,OACNwB,QAAQ,QACRpE,QAAQ,eCvDbK,oBAAS,WACpB,IACQgE,EADkBlE,IAAlBZ,cACA8E,kBAER,OACI,mCACKA,EAAkBf,KAAI,mCAAEgB,EAAF,KAAS3F,EAAT,YAEnB,eAAC,WAAD,WACI,cAAC+D,EAAA,EAAD,CAAQ6B,KAAG,EAAC3B,MAAM,OAAlB,SACK0B,IAEP3F,EAAW2E,KAAI,SAAApJ,GAAQ,OACjB,cAACyJ,GAAD,CAAoCzJ,SAAUA,GAAvBA,EAASF,SALzBsK,WCNhBjE,gBAAS,WACpB,IAAOd,EAAiBY,IAAjBZ,cACArD,EAAoCqD,EAApCrD,eAAgBN,EAAoB2D,EAApB3D,iBAMvB,OAJA4I,qBAAU,WACJ5I,EAAiB2G,MAAQ,GAAGrG,MAC/B,CAACN,EAAiB2G,KAAMrG,IAEvBqD,EAActD,eAAuB,cAACgG,EAAD,CAAkBjC,QAAQ,uBAG/D,eAACyE,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,CAAalC,MAAM,KAAnB,SACI,cAAC,GAAD,MAEJ,cAACiC,EAAA,EAAKC,OAAN,CAAalC,MAAM,IAAnB,SACI,cAACH,EAAD,Y,4BCdD,SAASsC,GAAYC,GAEhC,MAAoBC,aAASD,EAAMxD,MAAnC,mBAAO0D,EAAP,KAAaC,EAAb,KACA,OACI,eAACC,GAAA,EAAKC,MAAN,CAAY7M,MAAQ2M,EAAKG,WAAaH,EAAK3M,MAA3C,UACI,gCACKwM,EAAMO,QAEX,iDAAWL,GAAWF,IACrBG,EAAKG,SAAWH,EAAK3M,MAClB,cAAC0L,EAAA,EAAD,CAAOG,OAAK,EAACrB,MAAO,MAApB,SAA2BmC,EAAK3M,QAClC,QCdCiI,oBAAS,WACpB,IAAO1D,EAAawD,IAAbxD,UACP,OACI,cAAC,KAAD,CACIyI,cAAe,CAACC,MAAO,GAAIC,SAAU,GAAIlN,MAAO,MAChDmN,SAAU,SAACnH,EAAD,OAAUoH,EAAV,EAAUA,UAAV,OAAyB7I,EAAUpC,MAAM6D,GAAQqH,OAAM,SAAArN,GAAK,OAClEoN,EAAU,CAACpN,MAAO,kCAH1B,SAKK,gBAAEsN,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,aAAcnN,EAA9B,EAA8BA,OAA9B,OACG,eAAC,KAAD,CAAMqK,UAAU,UAAU0C,SAAUG,EAAcE,aAAa,MAA/D,UACI,cAAClD,EAAA,EAAD,CAAQ/B,GAAG,KAAKX,QAAQ,uBAAuB4C,MAAM,OAAOmB,UAAU,WACtE,cAACY,GAAD,CAAavD,KAAK,QAAQyE,YAAY,UACtC,cAAClB,GAAD,CAAavD,KAAK,WAAWyE,YAAY,WAAWC,KAAK,aACzD,cAAC,KAAD,CACI1E,KAAK,QAAQ2E,OAAQ,kBACrB,cAACjC,EAAA,EAAD,CAAO5C,MAAO,CAAC8C,aAAc,IAAKC,OAAK,EAACrB,MAAM,MAAM5C,QAASxH,EAAOJ,WAExE,cAACiJ,EAAA,EAAD,CAAQrF,QAAS2J,EAAcrE,UAAQ,EAACtB,QAAQ,QAAQ8F,KAAK,SAASE,OAAK,a,mBCjBhF,SAASC,GAAT,GAA4C,IAAjBzN,EAAgB,EAAhBA,OACtC,OACI,cAAC0N,GAAA,EAAD,CAAS9N,OAAK,EAAd,SACKI,GACG,cAAC0N,GAAA,EAAQ9C,KAAT,UACK5K,EAAO8K,KAAI,SAAC6C,EAAUC,GAAX,OACR,cAACF,GAAA,EAAQxF,KAAT,UAAuByF,GAAJC,UCJ5B/F,oBAAS,WACpB,IAAO1D,EAAawD,IAAbxD,UACP,OACI,cAAC,KAAD,CACIyI,cAAe,CAAC3J,YAAa,GAAID,SAAU,GAAI6J,MAAO,GAAIC,SAAU,GAAIlN,MAAO,MAC/EmN,SAAU,SAACnH,EAAD,OAAUoH,EAAV,EAAUA,UAAV,OAAyB7I,EAAUlC,SAAS2D,GAAQqH,OAAM,SAAArN,GAAK,OACrEoN,EAAU,CAACpN,cACfiO,iBAAkBC,KAAW,CACzB7K,YAAa6K,OAAaC,WAC1B/K,SAAU8K,OAAaC,WACvBlB,MAAOiB,OAAaC,WAAWlB,QAC/BC,SAAUgB,OAAaC,aAR/B,SAWK,gBAAEb,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,aAAcnN,EAA9B,EAA8BA,OAAQgO,EAAtC,EAAsCA,QAASC,EAA/C,EAA+CA,MAA/C,OACG,eAAC,KAAD,CAAM5D,UAAU,gBAAgB0C,SAAUG,EAAcE,aAAa,MAArE,UACI,cAAClD,EAAA,EAAD,CAAQ/B,GAAG,KAAKX,QAAQ,yBAAyB4C,MAAM,OAAOmB,UAAU,WACxE,cAACY,GAAD,CAAavD,KAAK,cAAcyE,YAAY,iBAC5C,cAAClB,GAAD,CAAavD,KAAK,WAAWyE,YAAY,aACzC,cAAClB,GAAD,CAAavD,KAAK,QAAQyE,YAAY,UACtC,cAAClB,GAAD,CAAavD,KAAK,WAAWyE,YAAY,WAAWC,KAAK,aACzD,cAAC,KAAD,CACI1E,KAAK,QAAQ2E,OAAQ,kBACrB,cAACE,GAAD,CAAkBzN,OAAQA,EAAOJ,WAErC,cAACiJ,EAAA,EAAD,CAAQqF,UAAWF,IAAYC,GAASd,EACpC3J,QAAS2J,EAAcrE,UAAQ,EAACtB,QAAQ,WAAW8F,KAAK,SAASE,OAAK,aC3B/E3F,gBAAS,WACpB,MAAkCF,IAA1BxD,EAAR,EAAQA,UAAWqC,EAAnB,EAAmBA,WACnB,OACI,cAAC4E,EAAA,EAAD,CAASrD,UAAQ,EAACwD,UAAU,SAASzB,UAAQ,EAACO,UAAU,WAAxD,SACI,eAACpC,EAAA,EAAD,CAAWoB,MAAI,EAAf,UACI,eAACa,EAAA,EAAD,CAAQ/B,GAAG,KAAKJ,UAAQ,EAAxB,UACI,cAACiB,EAAA,EAAD,CAAOe,KAAK,UAAUvB,IAAI,mBAAmBC,IAAI,OAAOC,MAAO,CAAE8C,aAAc,MADnF,kBAICrH,EAAUgK,WACP,qCACI,cAACjE,EAAA,EAAD,CAAQ/B,GAAG,KAAKJ,UAAQ,EAACP,QAAQ,4BACjC,cAACqB,EAAA,EAAD,CAAQV,GAAImB,IAAMhB,GAAG,cAAcyB,KAAK,OAAOhC,UAAQ,EAAvD,kCAMA,qCACI,cAACc,EAAA,EAAD,CAAQW,QAAS,kBAAMhD,EAAWe,UAAU,cAAC,GAAD,MAAgBwC,KAAK,OAAOhC,UAAQ,EAAhF,oBAGA,cAACc,EAAA,EAAD,CAAQW,QAAS,kBAAMhD,EAAWe,UAAU,cAAC,GAAD,MAAmBwC,KAAK,OAAOhC,UAAQ,EAAnF,kC,UCpBb,SAASqG,GAAWhC,GAE/B,MAAoBC,aAASD,EAAMxD,MAAnC,mBAAO0D,EAAP,KAAaC,EAAb,KACA,OACI,eAACC,GAAA,EAAKC,MAAN,CAAY7M,MAAQ2M,EAAKG,WAAaH,EAAK3M,MAA3C,UACI,gCACKwM,EAAMO,QAEX,oDAAcL,GAAWF,IACxBG,EAAKG,SAAWH,EAAK3M,MAClB,cAAC0L,EAAA,EAAD,CAAOG,OAAK,EAACrB,MAAO,MAApB,SAA2BmC,EAAK3M,QAClC,Q,cCXC,SAASyO,GAAcjC,GAElC,MAA4BC,aAASD,EAAMxD,MAA3C,mBAAO0D,EAAP,KAAaC,EAAb,KAAkB+B,EAAlB,KACA,OACI,eAAC9B,GAAA,EAAKC,MAAN,CAAY7M,MAAQ2M,EAAKG,WAAaH,EAAK3M,MAA3C,UACI,gCACKwM,EAAMO,QAEX,cAAC4B,GAAA,EAAD,CACIC,WAAS,EACTC,QAASrC,EAAMqC,QACfC,MAAOpC,EAAMoC,OAAS,KACtBC,SAAU,SAACC,EAAEC,GAAH,OAAOP,EAAQQ,SAASD,EAAEH,QACpCK,OAAQ,kBAAIT,EAAQU,YAAW,IAC/B3B,YAAajB,EAAMiB,cAEtBd,EAAKG,SAAWH,EAAK3M,MAClB,cAAC0L,EAAA,EAAD,CAAOG,OAAK,EAACrB,MAAO,MAApB,SAA2BmC,EAAK3M,QAClC,QC5BP,IAAMqP,GAAiB,CAC1B,CAAC5F,KAAK,SAASqF,MAAM,UACrB,CAACrF,KAAK,UAAUqF,MAAM,WACtB,CAACrF,KAAK,OAAOqF,MAAM,QACnB,CAACrF,KAAK,OAAOqF,MAAM,QACnB,CAACrF,KAAK,QAAQqF,MAAM,SACpB,CAACrF,KAAK,SAASqF,MAAM,W,qBCDV,SAASQ,GAAY9C,GAEhC,MAA4BC,aAASD,EAAMxD,MAA3C,mBAAO0D,EAAP,KAAaC,EAAb,KAAkB+B,EAAlB,KACA,OACI,eAAC9B,GAAA,EAAKC,MAAN,CAAY7M,MAAQ2M,EAAKG,WAAaH,EAAK3M,MAA3C,UACI,cAAC,KAAD,uCACQ0M,GACAF,GAFR,IAGI+C,SAAW7C,EAAMoC,OAAQ,IAAI9J,KAAK0H,EAAMoC,QAAS,KACjDC,SAAW,SAAAD,GAAK,OAAEJ,EAAQQ,SAASJ,OAGtCnC,EAAKG,SAAWH,EAAK3M,MAClB,cAAC0L,EAAA,EAAD,CAAOG,OAAK,EAACrB,MAAO,MAApB,SAA2BmC,EAAK3M,QAClC,QCHCiI,oBAAS,WACpB,IAAM3H,EAAUkP,eACRrI,EAAkBY,IAAlBZ,cACAhC,EAAiEgC,EAAjEhC,eAAgBG,EAAiD6B,EAAjD7B,eAAgBlB,EAAiC+C,EAAjC/C,aAAcP,EAAmBsD,EAAnBtD,eAC9CjC,EAAO6N,eAAP7N,GAER,EAAgC8N,mBAA6B,IAAI/M,GAAjE,mBAAOb,EAAP,KAAiBkC,EAAjB,KAEMiK,EAAmBC,KAAW,CAChCrL,MAAOqL,OAAaC,SAAS,kCAC7BpL,YAAamL,OAAaC,SAAS,wCACnCrL,SAAUoL,OAAaC,WACvBnL,KAAMkL,OAAaC,SAAS,oBAAoBwB,WAChDzM,MAAOgL,OAAaC,WACpBlL,KAAMiL,OAAaC,aAmBvB,OAhBA/B,qBAAU,WACFxK,GAAIwC,EAAaxC,GAAIT,MAAK,SAAAW,GAAQ,OAAIkC,EAAY,IAAIrB,EAAmBb,SAC9E,CAACF,EAAIwC,IAcJP,EAAuB,cAACgG,EAAD,CAAkBjC,QAAQ,wBAGjD,eAAC4D,EAAA,EAAD,CAASO,UAAQ,EAAjB,UACI,cAACzB,EAAA,EAAD,CAAQ1C,QAAQ,mBAAmBuE,KAAG,EAAC3B,MAAM,SAC7C,cAAC,KAAD,CACIyD,iBAAkBA,EAClB2B,oBAAkB,EAClB5C,cAAelL,EACfqL,SAAU,SAAAnH,GAAM,OArB5B,SAA0BlE,GACtB,GAAKA,EAASF,GAOV0D,EAAexD,GAAUX,MAAK,kBAAMb,EAAQC,KAAR,sBAA4BuB,EAASF,YAP3D,CACd,IAAIyD,EAAW,2BACRvD,GADQ,IAEXF,GAAIiO,iBAER1K,EAAeE,GAAalE,MAAK,kBAAMb,EAAQC,KAAR,sBAA4B8E,EAAYzD,SAevDkO,CAAiB9J,IAJzC,SAKK,gBAAGsH,EAAH,EAAGA,aAAcc,EAAjB,EAAiBA,QAASb,EAA1B,EAA0BA,aAAcc,EAAxC,EAAwCA,MAAxC,OACG,eAAC,KAAD,CAAM5D,UAAU,UAAU0C,SAAUG,EAAcE,aAAa,MAA/D,UACI,cAACjB,GAAD,CAAavD,KAAK,QAAQyE,YAAY,UACtC,cAACe,GAAD,CAAYuB,KAAM,EAAGtC,YAAY,cAAczE,KAAK,gBACpD,cAACyF,GAAD,CAAeI,QAASQ,GAAiB5B,YAAY,WAAYzE,KAAK,aACtE,cAACsG,GAAD,CACIU,gBAAgB,OAChBhH,KAAK,OACLiH,gBAAc,EACdC,YAAY,OACZC,WAAW,yBAEf,cAAC7F,EAAA,EAAD,CAAQ1C,QAAQ,mBAAmBuE,KAAG,EAAC3B,MAAM,SAC7C,cAAC+B,GAAD,CAAakB,YAAY,OAAQzE,KAAK,SACtC,cAACuD,GAAD,CAAakB,YAAY,QAAQzE,KAAK,UACtC,cAACC,EAAA,EAAD,CACIqF,SAAUf,IAAiBc,IAAUD,EACrCxK,QAAS2J,EAAcvB,QAAQ,QAC/B9C,UAAQ,EAACwE,KAAK,SAAS9F,QAAQ,WACnC,cAACqB,EAAA,EAAD,CAAQV,GAAImB,IAAMhB,GAAG,cAAcsD,QAAQ,QAAQ0B,KAAK,SAAS9F,QAAQ,uB,UC1ElFK,gBAAS,WACpB,OACI,qCACI,cAACuD,EAAA,EAAD,CACIG,UAAU,SACVpB,SAAS,MACTpC,UAAQ,EACRqC,MAAM,OACN1B,MAAO,CAACsH,OAAQ,QALpB,SAOI,cAAC9F,EAAA,EAAD,sCAEJ,cAACkB,EAAA,EAAD,CAASjB,UAAQ,EAAjB,SACI,eAAC8F,GAAA,EAAQ5E,MAAT,WACI,eAAC4E,GAAA,EAAD,WACI,cAACA,GAAA,EAAQC,OAAT,CAAgB1H,IAAI,qBACpB,eAACyH,GAAA,EAAQzF,QAAT,WACI,cAACyF,GAAA,EAAQE,OAAT,CAAgBhI,GAAG,IAAnB,kBACA,cAAC8H,GAAA,EAAQG,SAAT,UACI,oDAEJ,cAACH,GAAA,EAAQI,KAAT,4BACA,cAACJ,GAAA,EAAQK,QAAT,UACI,cAACL,GAAA,EAAQM,OAAT,4BAKZ,eAACN,GAAA,EAAD,WACI,cAACA,GAAA,EAAQC,OAAT,CAAgB1H,IAAI,qBACpB,eAACyH,GAAA,EAAQzF,QAAT,WACI,cAACyF,GAAA,EAAQE,OAAT,CAAgBhI,GAAG,IAAnB,2BACA,cAAC8H,GAAA,EAAQG,SAAT,UACI,+CAEJ,cAACH,GAAA,EAAQI,KAAT,oDACA,cAACJ,GAAA,EAAQK,QAAT,UACI,cAACL,GAAA,EAAQM,OAAT,4BAKZ,eAAC/D,GAAA,EAAD,CAAMgE,OAAK,EAAX,UACI,cAAChE,GAAA,EAAKiE,SAAN,IACA,cAAC5H,EAAA,EAAD,CACIrB,QAAQ,YACRkJ,cAAc,OACdnH,KAAK,OACLoH,SAAO,kBC1CpB9I,gBAAS,YAAkD,IAAnBnG,EAAkB,EAAlBA,SACnD,OACI,eAAC0J,EAAA,EAAQC,MAAT,WACI,cAACD,EAAA,EAAD,CAASjB,SAAS,MAAlB,SACI,eAAC8B,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,CAAalC,MAAO,EAApB,SACI,cAACW,EAAA,EAAD,CAAMZ,KAAK,QAAQK,MAAM,OAAOxB,KAAK,WAEzC,cAACqD,EAAA,EAAKC,OAAN,CAAalC,MAAO,GAApB,SACI,4BAAItI,EAASiB,qBAIzB,cAACyI,EAAA,EAAD,CAASjB,UAAQ,EAAjB,SACI,eAAC8B,EAAA,EAAD,CAAM2E,cAAc,SAApB,UACI,cAAC3E,EAAA,EAAKC,OAAN,CAAalC,MAAO,EAApB,SACI,cAACW,EAAA,EAAD,CAAM/B,KAAK,WAAWmB,KAAK,QAAQK,MAAM,WAE7C,cAAC6B,EAAA,EAAKC,OAAN,CAAalC,MAAO,GAApB,SACR,+BACG5D,kBAAQ1E,EAASkB,KAAM,gCAK1B,cAACwI,EAAA,EAAD,CAASjB,UAAQ,EAAjB,SACI,eAAC8B,EAAA,EAAD,CAAM2E,cAAc,SAApB,UACI,cAAC3E,EAAA,EAAKC,OAAN,CAAalC,MAAO,EAApB,SACI,cAACW,EAAA,EAAD,CAAM/B,KAAK,SAASmB,KAAK,QAAQK,MAAM,WAE3C,cAAC6B,EAAA,EAAKC,OAAN,CAAalC,MAAO,GAApB,SACI,iCAAOtI,EAASoB,MAAhB,KAAyBpB,EAASmB,qBC/B3CgF,gBAAS,YAA4E,IAAD,IAAxCnG,SAAY2C,EAA4B,EAA5BA,UAAWI,EAAiB,EAAjBA,KAC9E,OAAKJ,EAED,qCACI,eAAC+G,EAAA,EAAD,CACIG,UAAU,SACV7C,MAAO,CAAEsH,OAAQ,QACjB7F,SAAS,MACTuB,WAAS,EACT3D,UAAQ,EACRqC,MAAM,OANV,UAQK/F,EAAUwM,OARf,IAQ6C,IAArBxM,EAAUwM,OAAe,SAAW,SAR5D,YAUA,cAACzF,EAAA,EAAD,CAASjB,UAAQ,EAAjB,SACI,cAACS,EAAA,EAAD,CAAMkG,SAAO,EAACC,SAAO,EAArB,SACK1M,EAAUyG,KAAI,SAAA9F,GAAQ,OACnB,eAACkD,EAAA,EAAD,CAAMQ,MAAO,CAAEK,SAAU,YAAzB,UACK/D,EAAShC,YAAT,OAAsByB,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAMzB,WACzB,cAACsI,EAAA,EAAD,CACI5C,MAAO,CAAEK,SAAU,YACnBqB,MAAM,SACN4G,OAAO,QAHX,kBAOJ,cAAChI,EAAA,EAAD,CAAOe,KAAK,OAAOvB,IAAKxD,EAAS9B,OAAS,qBAC1C,eAACgF,EAAA,EAAKsC,QAAN,CAAcoG,cAAc,SAA5B,UACI,cAAC1I,EAAA,EAAKgC,OAAN,CAAa/B,GAAG,KAAhB,SACI,cAAC,IAAD,CAAMG,GAAE,oBAAetD,EAAShC,UAAhC,SAA6CgC,EAAS/B,gBAE1D,cAACiF,EAAA,EAAK+I,MAAN,CAAYvI,MAAO,CAAE0B,MAAO,UAA5B,4BAdoCpF,EAAShC,oBAhBlD,QCHrBkO,GAAqB,CACvB5L,OAAQ,mBAGN6L,GAAyB,CAC3BpI,SAAU,WACVqI,OAAQ,KACRC,KAAM,KACNrH,MAAO,OACPsH,OAAQ,OACRlH,MAAO,SAOIvC,gBAAS,YAAsD,IAAD,IAAnBnG,EAAmB,EAAnBA,SACtD,EAA+EiG,IAAvEZ,cAAiB1B,EAAzB,EAAyBA,iBAAkB7B,EAA3C,EAA2CA,QAAS+B,EAApD,EAAoDA,qBACpD,OACI,eAAC6F,EAAA,EAAQC,MAAT,WACI,eAACD,EAAA,EAAD,CAASK,OAAK,EAACtB,SAAS,MAAMzB,MAAO,CAAE6I,QAAS,KAAhD,UACK7P,EAAS8D,aACN,cAAC8F,EAAA,EAAD,CAAO5C,MAAO,CAAEK,SAAU,WAAYyI,OAAQ,IAAMH,MAAO,GAAII,IAAK,IAChET,QAAM,EAAC5G,MAAM,MAAM5C,QAAQ,cAEnC,cAACwB,EAAA,EAAD,CAAOR,IAAG,iCAA4B9G,EAASgB,SAArC,QAAqD8K,OAAK,EAAC9E,MAAOwI,KAC5E,cAAC9F,EAAA,EAAD,CAAS1C,MAAOyI,GAAwB1F,OAAK,EAA7C,SACI,cAACvD,EAAA,EAAKmD,MAAN,UACI,cAACnD,EAAA,EAAD,UACI,eAACA,EAAA,EAAKsC,QAAN,WACI,cAACN,EAAA,EAAD,CACIH,KAAK,OACLvC,QAAS9F,EAASe,MAClBiG,MAAO,CAAE0B,MAAO,WAEpB,4BAAIhE,kBAAO1E,EAASkB,KAAO,iBAC3B,2CACc,iCAAQ,cAAC,IAAD,CAAM0F,GAAE,8BAAe5G,EAAS+C,YAAxB,aAAe,EAAezB,UAAtC,mBAAmDtB,EAAS+C,YAA5D,aAAmD,EAAexB,+BAO5G,cAACmI,EAAA,EAAD,CAASO,UAAQ,EAACxB,SAAS,SAA3B,SACKzI,EAAS6C,OACN,qCACI,cAACsE,EAAA,EAAD,CACIuB,MAAO1I,EAAS8D,YAAc,QAAU,MACxCoG,QAAQ,OACRH,OAAK,EACLjE,QAAS9F,EAAS8D,YAAc,uBAAyB,kBACzDgE,QAASjE,EACT/B,QAASA,IAEb,cAACqF,EAAA,EAAD,CAAQV,GAAImB,IACR4E,SAAUxM,EAAS8D,YACnB8C,GAAE,kBAAa5G,EAASF,IACxB4I,MAAM,SACNwB,QAAQ,QAJZ,6BASJlK,EAAS0C,QACT,cAACyE,EAAA,EAAD,CAAQrF,QAASA,EAASgG,QAASnE,EAAnC,+BAEA,cAACwD,EAAA,EAAD,CAAQqF,SAAUxM,EAAS8D,YACvBhC,QAASA,EAASgG,QAASnE,EAAkB+E,MAAM,OADvD,mCCjELvC,gBAAS,WACpB,IAAOd,EAAiBY,IAAjBZ,cACkBrF,EAA0CqF,EAA5DzD,iBAA4BU,EAAgC+C,EAAhC/C,aAAcP,EAAkBsD,EAAlBtD,eAC1CjC,EAAM6N,eAAN7N,GAMP,OAJAwK,qBAAU,WACFxK,GAAIwC,EAAaxC,KACtB,CAACA,EAAIwC,IAEJP,IAAmB/B,EAAiB,cAAC+H,EAAD,IAGpC,eAACwC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,OAAN,CAAalC,MAAO,GAApB,UACI,cAAC,GAAD,CAAwBtI,SAAUA,IAClC,cAAC,GAAD,CAAsBA,SAAUA,IAChC,cAAC,GAAD,OAEJ,cAACuK,EAAA,EAAKC,OAAN,CAAalC,MAAO,EAApB,SACI,cAAC0H,GAAD,CAAyBhQ,SAAUA,YCzBpC,SAASiQ,KACpB,IACA,EAA4BrC,mBAAS,MAArC,mBAAOtP,EAAP,KAAegN,EAAf,KA0BA,OACI,qCACI,cAAC9C,EAAA,EAAD,CAAQ/B,GAAG,KAAKX,QAAQ,yBACxB,cAAC4D,EAAA,EAAD,UACI,eAACvC,EAAA,EAAOwC,MAAR,CAAcuG,OAAO,IAArB,UACI,cAAC/I,EAAA,EAAD,CAAQW,QA7BxB,WACI3K,IAAMiC,IAAI+Q,uBAA6B5E,OAAM,SAAAU,GAAG,OAAI7J,QAAQC,IAAI4J,EAAIjO,cA4BvB8H,QAAQ,YAAYiE,OAAK,EAACkF,SAAO,IAClE,cAAC9H,EAAA,EAAD,CAAQW,QA1BxB,WACI3K,IAAMiC,IAAI+Q,yBAA+B5E,OAAM,SAAAU,GAAG,OAAI7J,QAAQC,IAAI4J,EAAIjO,cAyBvB8H,QAAQ,cAAciE,OAAK,EAACkF,SAAO,IACtE,cAAC9H,EAAA,EAAD,CAAQW,QAXxB,WACI3K,IAAMoC,KAAK4Q,iBAAwB,IAAI5E,OAAM,SAAAU,GAAG,OAAIX,EAAUW,OAUVnG,QAAQ,mBAAmBiE,OAAK,EAACkF,SAAO,IAChF,cAAC9H,EAAA,EAAD,CAAQW,QAxBxB,WACI3K,IAAMiC,IAAI+Q,0BAAgC5E,OAAM,SAAAU,GAAG,OAAI7J,QAAQC,IAAI4J,EAAIjO,cAuBvB8H,QAAQ,eAAeiE,OAAK,EAACkF,SAAO,IACxE,cAAC9H,EAAA,EAAD,CAAQW,QArBxB,WACI3K,IAAMiC,IAAI+Q,0BAAgC5E,OAAM,SAAAU,GAAG,OAAI7J,QAAQC,IAAI4J,EAAIjO,cAoBtB8H,QAAQ,eAAeiE,OAAK,EAACkF,SAAO,IACzE,cAAC9H,EAAA,EAAD,CAAQW,QAlBxB,WACI3K,IAAMiC,IAAI+Q,2BAAiC5E,OAAM,SAAAU,GAAG,OAAI7J,QAAQC,IAAI4J,OAiBxBnG,QAAQ,WAAWiE,OAAK,EAACkF,SAAO,SAGvE3Q,GACG,cAACyN,GAAD,CAAkBzN,OAAQA,OC3C3B,SAAS8R,KACpB,OACI,eAAC1G,EAAA,EAAD,CAASiC,aAAW,EAApB,UACI,eAACnD,EAAA,EAAD,CAAQX,MAAI,EAAZ,UACI,cAACoB,EAAA,EAAD,CAAM/B,KAAK,WADf,6DAIA,cAACwC,EAAA,EAAQ2G,OAAT,UACI,cAAClJ,EAAA,EAAD,CAAQV,GAAImB,IAAMhB,GAAG,cAAcqI,SAAO,EAA1C,4CCPD9I,oBAAS,WAAwB,IAAD,IACpCtI,EAAeoI,IAAfpI,YACP,OACI,eAAC0I,EAAA,EAAD,WACI,cAACiC,EAAA,EAAD,CAAQ/B,GAAG,KAAKX,QAAQ,iBACxB,cAAC0C,EAAA,EAAD,CAAQ6B,KAAG,EAAC5D,GAAG,KAAKiC,MAAM,MAAM5C,QAAO,UAAEjI,EAAYK,aAAd,aAAE,EAAmBoS,WAC3D,UAAAzS,EAAYK,aAAZ,eAAmB2B,UAChB,eAAC6J,EAAA,EAAD,WACI,cAAClB,EAAA,EAAD,CAAQ/B,GAAG,KAAKX,QAAQ,cAAc4C,MAAM,SAC5C,sBAAM1B,MAAO,CAACuB,UAAW,QAAzB,SAAmC1K,EAAYK,MAAM2B,mB,UCT1DsG,gBAAS,WACpB,IAAOrB,EAAcmB,IAAdnB,WAEP,OACI,cAACyL,GAAA,EAAD,CAAO3K,KAAMd,EAAWa,MAAMC,KAAM4K,QAAS1L,EAAWC,WAAYsD,KAAK,OAAzE,SACI,cAACkI,GAAA,EAAMzH,QAAP,UACKhE,EAAWa,MAAMrG,Y,2BCJnB,SAASmR,GAAT,GAA+D,IAA7BC,EAA4B,EAAvCC,UAAyBC,EAAc,mBACtDnE,EAAexG,IAA3BxD,UAAYgK,WACnB,OACI,cAAC,KAAD,2BACQmE,GADR,IAEI/E,OAAQ,SAACnB,GAAD,OAAW+B,EAAa,cAACiE,EAAD,eAAehG,IAAY,cAAC,KAAD,CAAU9D,GAAG,UCiDrET,oBA1Cf,WACE,IAAM0K,EAAWC,eACjB,EAAiC7K,IAA1BpI,EAAP,EAAOA,YAAa4E,EAApB,EAAoBA,UAUpB,OARA6H,qBAAU,WACJzM,EAAYF,MACd8E,EAAU2C,UAAU2L,SAAQ,kBAAMlT,EAAY2H,kBAE9C3H,EAAY2H,iBAEb,CAAC3H,EAAa4E,IAEZ5E,EAAY0H,UAGf,qCACE,cAAC,IAAD,CAAgB8B,SAAS,eAAe2J,iBAAe,IACvD,cAAC,GAAD,IACA,cAAC,KAAD,CAAOrK,OAAK,EAACsK,KAAK,IAAIN,UAAWO,KACjC,cAAC,KAAD,CACED,KAAM,QACNpF,OAAQ,kBACN,qCACE,cAAC,EAAD,IACA,cAACtF,EAAA,EAAD,CAAWS,MAAO,CAAEuB,UAAW,OAA/B,SACE,eAAC,KAAD,WACE,cAACkI,GAAD,CAAc9J,OAAK,EAACsK,KAAK,cAAcN,UAAWQ,KAClD,cAACV,GAAD,CAAcQ,KAAK,kBAAkBN,UAAWS,KAChD,cAACX,GAAD,CAAiCQ,KAAM,CAAC,kBAAmB,eAAgBN,UAAWU,IAAnER,EAASlS,KAC5B,cAAC8R,GAAD,CAAcQ,KAAK,UAAUN,UAAWV,KACxC,cAAC,KAAD,CAAOgB,KAAK,gBAAgBN,UAAWW,KACvC,cAAC,KAAD,CAAOL,KAAK,SAASN,UAAWY,KAChC,cAAC,KAAD,CAAOZ,UAAWP,mBApBG,cAACrI,EAAD,CAAkBjC,QAAQ,sBCjBhD0L,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrS,MAAK,YAAkD,IAA/CsS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCNC,SAASO,KACtB,IAAQC,EAAanB,eAAbmB,SAMR,OAJA3H,qBAAU,WACRrF,OAAOiN,SAAS,EAAG,KAClB,CAACD,IAEG,KCIF,IAAMzT,GAAU2T,eAEvBC,IAASvG,OACP,cAAC9F,EAAasM,SAAd,CAAuBrF,MAAOpP,EAA9B,SACE,eAAC,KAAD,CAAQY,QAASA,GAAjB,UACE,cAACwT,GAAD,IACA,cAAC,GAAD,SAGJM,SAASC,eAAe,SAM1Bf,O","file":"static/js/main.7af92f85.chunk.js","sourcesContent":["import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from '../stores/store';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers!.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if(process.env.NODE_ENV ==='development') await sleep(1000);\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const {data, status, config} = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                history.push('/not-found');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            } else {\r\n                toast.error(data);\r\n            }\r\n            break;\r\n        case 401:\r\n            toast.error('unauthorised');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: () => requests.get<Activity[]>('/activities'),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user)\r\n}\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees: Profile[]\r\n  }\r\n\r\n  export class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n      Object.assign(this, init);\r\n    }\r\n  }\r\n\r\n  export class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues) {\r\n      if (activity) {\r\n        this.id = activity.id;\r\n        this.title = activity.title;\r\n        this.category = activity.category;\r\n        this.description = activity.description;\r\n        this.date = activity.date;\r\n        this.venue = activity.venue;\r\n        this.city = activity.city;\r\n      }\r\n    }\r\n  }","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n} ","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport {format} from 'date-fns';\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\n\r\nexport default class ActivityStore {\r\n    activityRegistry = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) =>\r\n            a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date!, 'dd MMM yyyy');\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as {[key: string]: Activity[]})\r\n        )\r\n    }\r\n\r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const activities = await agent.Activities.list();\r\n            activities.forEach(activity => {\r\n                this.setActivity(activity);\r\n            })\r\n            this.setLoadingInitial(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n\r\n    loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity;\r\n            return activity;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() => {\r\n                    this.selectedActivity = activity;\r\n                })\r\n                this.setLoadingInitial(false);\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            activity.isGoing = activity.attendees!.some(\r\n                a => a.username === user.username\r\n            )\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n        }\r\n        activity.date = new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createActivity = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUsername = user!.username;\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n                    let updatedActivity = {...this.getActivity(activity.id), ...activity}\r\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n                    this.selectedActivity = updatedActivity as Activity;\r\n                } \r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendance = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                if (this.selectedActivity?.isGoing) {\r\n                    this.selectedActivity.attendees = \r\n                        this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\r\n                    this.selectedActivity.isGoing = false;\r\n                } else {\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedActivity?.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing = true;\r\n                }\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    cancelActivityToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            runInAction(() => this.user = user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token)\r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n    \r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Menu, Image, Dropdown } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\nexport default observer(function NavBar() {\r\n    const { userStore: { user, logout } } = useStore();\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} exact to='/' header>\r\n                    <img src='/assets/logo.png' alt='logo' style={{ marginRight: '10px' }} />\r\n                    Reactivities\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/activities' name='Activities' />\r\n                <Menu.Item as={NavLink} to='/errors' name='Errors' />\r\n                <Menu.Item>\r\n                    <Button as={NavLink} to='/createActivity' positive content='Create Activity' />\r\n                </Menu.Item>\r\n                <Menu.Item position='right'>\r\n                    <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\r\n                    <Dropdown pointing='top left' text={user?.displayName}>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item as={Link} to={`/profile/${user?.username}`} \r\n                                text='My Profile' icon='user' />\r\n                            <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Menu.Item>\r\n            </Container>\r\n        </Menu>\r\n    )\r\n})","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    inverted?:boolean;\r\n    content?:string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted=true,content ='Loading..'}:Props){\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content ={content}/>\r\n        </Dimmer>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport { Header, Menu } from 'semantic-ui-react';\r\n\r\nexport default function ActivityFilters() {\r\n    return (\r\n        <>\r\n\r\n            <Menu vertical size='large' style={{ width: '100%',marginTop:25 }}>\r\n                <Header icon='filter' attached color='teal' content='Filters' />\r\n                <Menu.Item content='All Activities' />\r\n                <Menu.Item content=\"I'm going\" />\r\n                <Menu.Item content=\"I'm hosting\" />\r\n\r\n            </Menu>\r\n\r\n            <Calendar className ='calendar'/>\r\n\r\n        </>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({profile}: Props) {\r\n    return (\r\n        <Card as={Link} to={`/profiles/${profile.username}`}>\r\n            <Image src={profile.image || '/assets/user.png'} />\r\n            <Card.Content>\r\n                <Card.Header>{profile.displayName}</Card.Header>\r\n                <Card.Description>Bio goes here</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Icon name='user' />\r\n                20 followers\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image, List, Popup } from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props {\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({ attendees }: Props) {\r\n    return (\r\n        <List horizontal>\r\n            {attendees.map(attendee => (\r\n                <Popup\r\n                    hoverable\r\n                    key={attendee.username}\r\n                    trigger={\r\n                        <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n                            <Image size='mini' circular src={attendee.image || '/assets/user.png'} />\r\n                        </List.Item>\r\n                    }\r\n                >\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={attendee} />\r\n                    </Popup.Content>\r\n                </Popup>\r\n\r\n            ))}\r\n        </List>\r\n    )\r\n}) ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport {format} from 'date-fns';\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment>\r\n                {activity.isCancelled &&\r\n                    <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}} />\r\n                }\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image style={{marginBottom: 3}} size='tiny' circular src='/assets/user.png' />\r\n                        <Item.Content>\r\n                            <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                                {activity.title}\r\n                            </Item.Header>\r\n                            <Item.Description>Hosted by {activity.host?.displayName}</Item.Description>\r\n                            {activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='orange'>\r\n                                        You are hosting this activity\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                            {activity.isGoing && !activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='green'>\r\n                                        You are going to this activity\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock' /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n                    <Icon name='marker' /> {activity.venue}\r\n                </span>\r\n            </Segment>\r\n            <Segment secondary>\r\n                <ActivityListItemAttendee attendees={activity.attendees!} />\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{activity.description}</span>\r\n                <Button \r\n                    as={Link}\r\n                    to={`/activities/${activity.id}`}\r\n                    color='teal'\r\n                    floated='right'\r\n                    content='View'\r\n                />\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { Fragment } from 'react';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\nexport default observer(function ActivityList() {\r\n    const { activityStore } = useStore();\r\n    const { groupedActivities } = activityStore;\r\n\r\n    return (\r\n        <>\r\n            {groupedActivities.map(([group, activities]) => (\r\n\r\n                <Fragment key={group}>\r\n                    <Header sub color='teal'>\r\n                        {group}\r\n                    </Header>\r\n                 {activities.map(activity => (\r\n                        <ActivityListItem key={activity.id} activity={activity} />\r\n                    ))}\r\n\r\n                </Fragment>\r\n\r\n            ))}\r\n        </>\r\n\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponents';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport ActivityList from './ActivityList';\r\n\r\nexport default observer(function ActivityDashboard() {\r\n    const {activityStore} = useStore();\r\n    const {loadActivities, activityRegistry} = activityStore;\r\n\r\n    useEffect(() => {\r\n      if (activityRegistry.size <= 1) loadActivities();\r\n    }, [activityRegistry.size, loadActivities])\r\n  \r\n    if (activityStore.loadingInitial) return <LoadingComponent content='Loading activities' />\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                <ActivityList />\r\n            </Grid.Column>\r\n            <Grid.Column width='6'>\r\n                <ActivityFilters/>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    type?:string;\r\n    label?:string;\r\n}\r\nexport default function MyTextInput(props:Props){\r\n\r\n    const [field,meta]= useField(props.name);\r\n    return(\r\n        <Form.Field error ={meta.touched && !!meta.error}>\r\n            <label>\r\n                {props.label}\r\n            </label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error?(\r\n                <Label basic color ='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function LoginForm() {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{email: '', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => \r\n                setErrors({error: 'Invalid email or password'}))}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors}) => (\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Login to Reactivites' color='teal' textAlign='center' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type='password' />\r\n                    <ErrorMessage \r\n                        name='error' render={() => \r\n                        <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}\r\n                    />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({errors}: Props) {\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err: any, i:any) => (\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer(function RegisterForm() {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{displayName: '', username: '', email: '', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => \r\n                setErrors({error}))}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required(),\r\n                username: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n            })}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign up to Reactivites' color='teal' textAlign='center' />\r\n                    <MyTextInput name='displayName' placeholder='Display Name' />\r\n                    <MyTextInput name='username' placeholder='Username' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type='password' />\r\n                    <ErrorMessage \r\n                        name='error' render={() => \r\n                        <ValidationErrors errors={errors.error}/>}\r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting} \r\n                        loading={isSubmitting} positive content='Register' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}) ","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Header, Segment, Image, Button } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nexport default observer(function HomePage() {\r\n    const { userStore, modalStore } = useStore();\r\n    return (\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container text>\r\n                <Header as='h1' inverted>\r\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{ marginBottom: 12 }} />\r\n                    Reactivities\r\n                </Header>\r\n                {userStore.isLoggedIn ? (\r\n                    <>\r\n                        <Header as='h2' inverted content='Welcome to Reactivities' />\r\n                        <Button as={Link} to='/activities' size='huge' inverted>\r\n                            Go to Activities!\r\n                        </Button>\r\n                    </>\r\n\r\n                ) : (\r\n                        <>\r\n                            <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\r\n                                Login!\r\n                        </Button>\r\n                            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\r\n                                Register!\r\n                        </Button>\r\n                        </>\r\n\r\n                    )}\r\n            </Container>\r\n        </Segment>\r\n    )\r\n})","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    rows:number;\r\n    label?:string;\r\n}\r\nexport default function MyTextArea(props:Props){\r\n\r\n    const [field,meta]= useField(props.name);\r\n    return(\r\n        <Form.Field error ={meta.touched && !!meta.error}>\r\n            <label>\r\n                {props.label}\r\n            </label>\r\n            <textarea {...field} {...props} />\r\n            {meta.touched && meta.error?(\r\n                <Label basic color ='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    options:any;\r\n    label?:string;\r\n}\r\nexport default function MySelectInput(props:Props){\r\n\r\n    const [field,meta,helpers]= useField(props.name);\r\n    return(\r\n        <Form.Field error ={meta.touched && !!meta.error}>\r\n            <label>\r\n                {props.label}\r\n            </label>\r\n            <Select \r\n                clearable\r\n                options={props.options}\r\n                value={field.value || null}\r\n                onChange={(e,d)=>helpers.setValue(d.value)}\r\n                onBlur={()=>helpers.setTouched(true)}\r\n                placeholder={props.placeholder}\r\n                />\r\n            {meta.touched && meta.error?(\r\n                <Label basic color ='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","export const categoryOptions =[\r\n    {text:'Drinks',value:'drinks'},\r\n    {text:'Culture',value:'culture'},\r\n    {text:'Film',value:'film'},\r\n    {text:'Food',value:'food'},\r\n    {text:'Music',value:'music'},\r\n    {text:'Travel',value:'travel'},\r\n\r\n]","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker,{ReactDatePickerProps} from 'react-datepicker';\r\n\r\nexport default function MyDateInput(props:Partial<ReactDatePickerProps>){\r\n\r\n    const [field,meta,helpers]= useField(props.name!);\r\n    return(\r\n        <Form.Field error ={meta.touched && !!meta.error}>\r\n            <DatePicker \r\n                {...field}\r\n                {...props}\r\n                selected={(field.value &&new Date(field.value))||null}\r\n                onChange ={value=>helpers.setValue(value)}\r\n\r\n            />\r\n            {meta.touched && meta.error?(\r\n                <Label basic color ='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponents';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/SelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\n\r\nexport default observer(function ActivityForm() {\r\n    const history = useHistory();\r\n    const { activityStore } = useStore();\r\n    const { createActivity, updateActivity, loadActivity, loadingInitial } = activityStore;\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The activity title is required'),\r\n        description: Yup.string().required('The activity description is required'),\r\n        category: Yup.string().required(),\r\n        date: Yup.string().required('Date is required').nullable(),\r\n        venue: Yup.string().required(),\r\n        city: Yup.string().required(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)))\r\n    }, [id, loadActivity]);\r\n\r\n    function handleFormSubmit(activity: ActivityFormValues) {\r\n        if (!activity.id) {\r\n            let newActivity = {\r\n                ...activity,\r\n                id: uuid()\r\n            };\r\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`))\r\n        } else {\r\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\r\n        }\r\n    }\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading activity...' />\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Activity Details' sub color='teal' />\r\n            <Formik \r\n                validationSchema={validationSchema}\r\n                enableReinitialize \r\n                initialValues={activity} \r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                        <MyTextInput name='title' placeholder='Title' />\r\n                        <MyTextArea rows={3} placeholder='Description' name='description' />\r\n                        <MySelectInput options={categoryOptions} placeholder='Category'  name='category' />\r\n                        <MyDateInput \r\n                            placeholderText='Date'  \r\n                            name='date' \r\n                            showTimeSelect\r\n                            timeCaption='time'\r\n                            dateFormat='MMMM d, yyyy h:mm aa'\r\n                        />\r\n                        <Header content='Location Details' sub color='teal' />\r\n                        <MyTextInput placeholder='City'  name='city' />\r\n                        <MyTextInput placeholder='Venue' name='venue' />\r\n                        <Button \r\n                            disabled={isSubmitting || !dirty || !isValid}\r\n                            loading={isSubmitting} floated='right' \r\n                            positive type='submit' content='Submit' />\r\n                        <Button as={Link} to='/activities' floated='right' type='button' content='Cancel' />\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n        </Segment>\r\n    )\r\n})","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport {Segment, Header, Comment, Form, Button} from 'semantic-ui-react'\r\n\r\nexport default observer(function ActivityDetailedChat() {\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{border: 'none'}}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Comment.Group>\r\n                    <Comment>\r\n                        <Comment.Avatar src='/assets/user.png'/>\r\n                        <Comment.Content>\r\n                            <Comment.Author as='a'>Matt</Comment.Author>\r\n                            <Comment.Metadata>\r\n                                <div>Today at 5:42PM</div>\r\n                            </Comment.Metadata>\r\n                            <Comment.Text>How artistic!</Comment.Text>\r\n                            <Comment.Actions>\r\n                                <Comment.Action>Reply</Comment.Action>\r\n                            </Comment.Actions>\r\n                        </Comment.Content>\r\n                    </Comment>\r\n\r\n                    <Comment>\r\n                        <Comment.Avatar src='/assets/user.png'/>\r\n                        <Comment.Content>\r\n                            <Comment.Author as='a'>Joe Henderson</Comment.Author>\r\n                            <Comment.Metadata>\r\n                                <div>5 days ago</div>\r\n                            </Comment.Metadata>\r\n                            <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\r\n                            <Comment.Actions>\r\n                                <Comment.Action>Reply</Comment.Action>\r\n                            </Comment.Actions>\r\n                        </Comment.Content>\r\n                    </Comment>\r\n\r\n                    <Form reply>\r\n                        <Form.TextArea/>\r\n                        <Button\r\n                            content='Add Reply'\r\n                            labelPosition='left'\r\n                            icon='edit'\r\n                            primary\r\n                        />\r\n                    </Form>\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport {format} from 'date-fns';\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format (activity.date!,'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props {\r\n    activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: { attendees, host } }: Props) {\r\n    if (!attendees) return null;\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {attendees.map(attendee => (\r\n                        <Item style={{ position: 'relative' }} key={attendee.username}>\r\n                            {attendee.username === host?.username &&\r\n                                <Label\r\n                                    style={{ position: 'absolute' }}\r\n                                    color='orange'\r\n                                    ribbon='right'\r\n                                >\r\n                                    Host\r\n                                </Label>}\r\n                            <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Item.Header as='h3'>\r\n                                    <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                                </Item.Header>\r\n                                <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    ))}\r\n\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react'\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from 'date-fns';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n    const { activityStore: { updateAttendance, loading, cancelActivityToggle } } = useStore();\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{ padding: '0' }}>\r\n                {activity.isCancelled &&\r\n                    <Label style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }}\r\n                        ribbon color='red' content='Cancelled' />\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{ color: 'white' }}\r\n                                />\r\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                                <p>\r\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost ? (\r\n                    <>\r\n                        <Button\r\n                            color={activity.isCancelled ? 'green' : 'red'}\r\n                            floated='left'\r\n                            basic\r\n                            content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\r\n                            onClick={cancelActivityToggle}\r\n                            loading={loading}\r\n                        />\r\n                        <Button as={Link}\r\n                            disabled={activity.isCancelled}\r\n                            to={`/manage/${activity.id}`}\r\n                            color='orange'\r\n                            floated='right'>\r\n                            Manage Event\r\n                        </Button>\r\n                    </>\r\n\r\n                ) : activity.isGoing ? (\r\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\r\n                ) : (\r\n                    <Button disabled={activity.isCancelled}\r\n                        loading={loading} onClick={updateAttendance} color='teal'>\r\n                            Join Activity\r\n                    </Button>\r\n                )}\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponents';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedSideBar from './ActivityDetailedSideBar';\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\n\r\nexport default observer(function ActivityDetails() {\r\n    const {activityStore} = useStore();\r\n    const {selectedActivity: activity, loadActivity, loadingInitial} = activityStore;\r\n    const {id} = useParams<{id: string}>();\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id);\r\n    }, [id, loadActivity]);\r\n\r\n    if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <ActivityDetailedHeader activity={activity} />\r\n                <ActivityDetailedInfo activity={activity} />\r\n                <ActivityDetailedChat />\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n                <ActivityDetailedSideBar activity={activity} />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl =process.env.REACT_APP_API_URL;\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors &&\r\n                <ValidationErrors errors={errors} />\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oops - we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function ServerError() {\r\n    const {commonStore} = useStore();\r\n    return (\r\n        <Container>\r\n            <Header as='h1' content='Server Error' />\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\r\n            {commonStore.error?.details &&\r\n                <Segment>\r\n                    <Header as='h4' content='Stack trace' color='teal' />\r\n                    <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n                </Segment>\r\n                \r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\n\r\nexport default observer(function ModalContainer() {\r\n    const {modalStore} = useStore();\r\n\r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n    const {userStore: {isLoggedIn}} = useStore();\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\r\n        />\r\n    )\r\n}","import React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport LoginForm from '../../features/users/LoginForm';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponents';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport PrivateRoute from './PrivateRoutes';\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore])\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route path='/login' component={LoginForm} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop/>\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}